services:
  flask:
    container_name: flask
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - apache
      - ollama
      - garnet
      - postgresql
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
  
  apache:
    container_name: apache
    build:
      context: ./apache
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./apache/certs/yourdomain.crt:/etc/ssl/certs/yourdomain.crt
      - ./apache/certs/yourdomain.key:/etc/ssl/private/yourdomain.key
      - ./logs/yourdomain.com.log:/var/log/apache/yourdomain.com.log
      - ./logs/yourdomain.com.error.log:/var/log/apache/yourdomain.com.error.log

  ollama:
    container_name: ollama
    build:
      context: ./ollama
      dockerfile: Dockerfile
    ports: 
      - "11434:11434"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  garnet:
    container_name: garnet
    build:
      context: .
      dockerfile: garnet/Dockerfile
    ports:
      - "6379:6379"
    volumes:
      - ./garnet:/data
    networks:
      - app-network

    
  postgresql:
    container_name: postgresql
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=apache

networks:
  app-network:
    driver: bridge